# Generated by Django 5.2.2 on 2025-06-26 14:24

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PhysicalAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time when this record was created', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time when this record was last updated', verbose_name='Updated At')),
                ('street_address', models.CharField(blank=True, help_text='Street address including house/building number', max_length=255, verbose_name='Street Address')),
                ('neighborhood', models.CharField(blank=True, help_text='Neighborhood or district', max_length=100, verbose_name='Neighborhood')),
                ('city', models.CharField(help_text='City name', max_length=100, verbose_name='City')),
                ('region', models.CharField(help_text='State, province, or region', max_length=100, verbose_name='Region')),
                ('country', models.CharField(default='Cameroon', help_text='Country name', max_length=100, verbose_name='Country')),
                ('postal_code', models.CharField(blank=True, help_text='Postal or ZIP code', max_length=20, verbose_name='Postal Code')),
                ('latitude', models.DecimalField(blank=True, decimal_places=8, help_text='Latitude coordinate', max_digits=10, null=True, verbose_name='Latitude')),
                ('longitude', models.DecimalField(blank=True, decimal_places=8, help_text='Longitude coordinate', max_digits=11, null=True, verbose_name='Longitude')),
            ],
            options={
                'verbose_name': 'Physical Address',
                'verbose_name_plural': 'Physical Addresses',
                'db_table': 'physical_address',
                'ordering': ['city', 'region'],
                'abstract': False,
                'indexes': [models.Index(fields=['city'], name='physical_ad_city_81a9bb_idx'), models.Index(fields=['region'], name='physical_ad_region_5c37f2_idx'), models.Index(fields=['country'], name='physical_ad_country_669a47_idx')],
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time when this record was created', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time when this record was last updated', verbose_name='Updated At')),
                ('content_type', models.CharField(choices=[('business', 'Business'), ('guide', 'Guide'), ('tour_package', 'Tour Package'), ('room', 'Room'), ('vehicle', 'Vehicle'), ('restaurant', 'Restaurant'), ('tour', 'Tour')], max_length=50, verbose_name='Content Type')),
                ('object_id', models.IntegerField(verbose_name='Object ID')),
                ('rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Rating')),
                ('content', models.TextField(blank=True, null=True, verbose_name='Content')),
                ('is_approved', models.BooleanField(default=False, verbose_name='Is Approved')),
                ('approved_at', models.DateTimeField(blank=True, null=True, verbose_name='Approved At')),
                ('response_text', models.TextField(blank=True, null=True, verbose_name='Response')),
                ('response_date', models.DateTimeField(blank=True, null=True, verbose_name='Response Date')),
                ('is_verified_purchase', models.BooleanField(default=False, verbose_name='Verified Purchase')),
                ('helpful_count', models.IntegerField(default=0, verbose_name='Helpful Count')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Featured')),
                ('is_public', models.BooleanField(default=True, verbose_name='Public')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_reviews', to=settings.AUTH_USER_MODEL, verbose_name='Approved By')),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to=settings.AUTH_USER_MODEL, verbose_name='Reviewer')),
            ],
            options={
                'verbose_name': 'Review',
                'verbose_name_plural': 'Reviews',
                'ordering': ['-created_at'],
                'unique_together': {('reviewer', 'content_type', 'object_id')},
            },
        ),
        migrations.CreateModel(
            name='ReviewImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time when this record was created', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time when this record was last updated', verbose_name='Updated At')),
                ('image', models.ImageField(help_text='Image uploaded with the review', upload_to='reviews/images/', verbose_name='Image')),
                ('caption', models.CharField(blank=True, help_text='Optional caption for the image', max_length=255, verbose_name='Caption')),
                ('order', models.IntegerField(default=0, help_text='Order in which the image appears', verbose_name='Display Order')),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='core.review', verbose_name='Review')),
            ],
            options={
                'verbose_name': 'Review Image',
                'verbose_name_plural': 'Review Images',
                'ordering': ['review', 'order'],
            },
        ),
        migrations.CreateModel(
            name='ReviewVote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time when this record was created', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time when this record was last updated', verbose_name='Updated At')),
                ('is_helpful', models.BooleanField(help_text='Whether the user found this review helpful', verbose_name='Is Helpful')),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='core.review', verbose_name='Review')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review_votes', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Review Vote',
                'verbose_name_plural': 'Review Votes',
                'ordering': ['-created_at'],
                'unique_together': {('review', 'user')},
            },
        ),
    ]
