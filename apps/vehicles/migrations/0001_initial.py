# Generated by Django 5.2.2 on 2025-06-26 14:24

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('business', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='VehicleCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time when this record was created', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time when this record was last updated', verbose_name='Updated At')),
                ('name', models.CharField(help_text='Category name (e.g. Sedan, SUV, Van)', max_length=100, unique=True, verbose_name='Name')),
                ('code', models.CharField(help_text='Unique code for the category', max_length=20, unique=True, verbose_name='Code')),
                ('description', models.TextField(blank=True, help_text='Optional description of the category', verbose_name='Description')),
                ('icon', models.ImageField(blank=True, help_text='Icon representing the category', upload_to='vehicle_categories/', verbose_name='Icon')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this category is active and should be displayed', verbose_name='Active')),
            ],
            options={
                'verbose_name': 'Vehicle Category',
                'verbose_name_plural': 'Vehicle Categories',
                'db_table': 'vehicle_category',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=100, verbose_name='Last Name')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1, verbose_name='Gender')),
                ('date_of_birth', models.DateField(verbose_name='Date of Birth')),
                ('phone_number', models.CharField(max_length=20, verbose_name='Phone Number')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('address', models.TextField(verbose_name='Address')),
                ('license_number', models.CharField(max_length=50, unique=True, verbose_name='License Number')),
                ('license_type', models.CharField(choices=[('A', 'Type A'), ('B', 'Type B'), ('C', 'Type C'), ('D', 'Type D'), ('E', 'Type E')], max_length=1, verbose_name='License Type')),
                ('license_expiry', models.DateField(verbose_name='License Expiry Date')),
                ('photo', models.ImageField(blank=True, upload_to='drivers/photos/', verbose_name='Photo')),
                ('years_of_experience', models.PositiveIntegerField(default=0, verbose_name='Years of Experience')),
                ('languages_spoken', models.JSONField(default=list, help_text='List of language codes', verbose_name='Languages Spoken')),
                ('daily_rate', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Daily Rate')),
                ('is_available', models.BooleanField(default=True, verbose_name='Available')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Is Verified')),
                ('verification_document', models.FileField(blank=True, upload_to='drivers/verification/', verbose_name='Verification Document')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('business_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='drivers', to='business.businesslocation', verbose_name='Business Location')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='driver_profile', to=settings.AUTH_USER_MODEL, verbose_name='User Account')),
            ],
            options={
                'verbose_name': 'Driver',
                'verbose_name_plural': 'Drivers',
                'db_table': 'driver',
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('make', models.CharField(help_text='Vehicle manufacturer', max_length=100, verbose_name='Make')),
                ('model', models.CharField(help_text='Vehicle model', max_length=100, verbose_name='Model')),
                ('year', models.IntegerField(help_text='Manufacturing year', verbose_name='Year')),
                ('license_plate', models.CharField(help_text='Vehicle license plate number', max_length=50, unique=True, verbose_name='License Plate')),
                ('color', models.CharField(help_text='Vehicle color', max_length=50, verbose_name='Color')),
                ('passenger_capacity', models.IntegerField(help_text='Maximum number of passengers', verbose_name='Passenger Capacity')),
                ('transmission', models.CharField(choices=[('MANUAL', 'Manual'), ('AUTOMATIC', 'Automatic')], help_text='Transmission type', max_length=20, verbose_name='Transmission')),
                ('fuel_type', models.CharField(choices=[('PETROL', 'Petrol'), ('DIESEL', 'Diesel'), ('ELECTRIC', 'Electric'), ('HYBRID', 'Hybrid')], help_text='Type of fuel used', max_length=20, verbose_name='Fuel Type')),
                ('daily_rate', models.DecimalField(decimal_places=2, help_text='Daily rental rate in XAF', max_digits=10, verbose_name='Daily Rate')),
                ('description', models.TextField(blank=True, help_text='Detailed description of the vehicle', verbose_name='Description')),
                ('features', models.JSONField(blank=True, default=list, help_text='List of vehicle features', verbose_name='Features')),
                ('main_image', models.ImageField(blank=True, help_text='Primary image of the vehicle', upload_to='vehicles/', verbose_name='Main Image')),
                ('mileage', models.IntegerField(default=0, help_text='Current mileage of the vehicle', verbose_name='Mileage')),
                ('is_available', models.BooleanField(default=True, help_text='Whether this vehicle is currently available for rent', verbose_name='Available')),
                ('maintenance_mode', models.BooleanField(default=False, help_text='Whether this vehicle is under maintenance', verbose_name='Maintenance Mode')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('business_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicles', to='business.businesslocation', verbose_name='Business Location')),
                ('vehicle_category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='vehicles', to='vehicles.vehiclecategory', verbose_name='Vehicle Category')),
            ],
            options={
                'verbose_name': 'Vehicle',
                'verbose_name_plural': 'Vehicles',
                'db_table': 'vehicle',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='VehicleBooking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commission_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Commission Amount')),
                ('booking_reference', models.CharField(max_length=50, unique=True, verbose_name='Booking Reference')),
                ('special_requests', models.TextField(blank=True, null=True, verbose_name='Special Requests')),
                ('customer_notes', models.TextField(blank=True, null=True, verbose_name='Customer Notes')),
                ('cancellation_reason', models.TextField(blank=True, null=True, verbose_name='Cancellation Reason')),
                ('cancelled_at', models.DateTimeField(blank=True, null=True, verbose_name='Cancelled At')),
                ('pickup_datetime', models.DateTimeField(verbose_name='Pickup Date and Time')),
                ('return_datetime', models.DateTimeField(verbose_name='Return Date and Time')),
                ('pickup_location', models.CharField(max_length=255, verbose_name='Pickup Location')),
                ('return_location', models.CharField(max_length=255, verbose_name='Return Location')),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('CONFIRMED', 'Confirmed'), ('CANCELLED', 'Cancelled'), ('COMPLETED', 'Completed'), ('NO_SHOW', 'No Show'), ('PICKED_UP', 'Picked Up'), ('RETURNED', 'Returned')], default='PENDING', max_length=20, verbose_name='Status')),
                ('payment_status', models.CharField(choices=[('UNPAID', 'Unpaid'), ('PARTIALLY_PAID', 'Partially Paid'), ('PAID', 'Paid'), ('REFUNDED', 'Refunded')], default='UNPAID', max_length=20, verbose_name='Payment Status')),
                ('daily_rate', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Daily Rate')),
                ('total_days', models.IntegerField(help_text='Number of days for the booking', verbose_name='Total Days')),
                ('subtotal', models.DecimalField(decimal_places=2, help_text='Daily rate × Total days', max_digits=10, verbose_name='Subtotal')),
                ('driver_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Driver Fee')),
                ('additional_charges', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Additional Charges')),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Total Amount')),
                ('amount_paid', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Amount Paid')),
                ('start_mileage', models.IntegerField(blank=True, null=True, verbose_name='Start Mileage')),
                ('end_mileage', models.IntegerField(blank=True, null=True, verbose_name='End Mileage')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('terms_accepted', models.BooleanField(default=False, verbose_name='Terms Accepted')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Customer')),
                ('driver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='vehicle_bookings', to='vehicles.driver', verbose_name='Driver')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bookings', to='vehicles.vehicle', verbose_name='Vehicle')),
            ],
            options={
                'verbose_name': 'Vehicle Booking',
                'verbose_name_plural': 'Vehicle Bookings',
                'db_table': 'vehicle_booking',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='VehicleImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(help_text='Additional image of the vehicle', upload_to='vehicles/', verbose_name='Image')),
                ('caption', models.CharField(blank=True, help_text='Optional caption for the image', max_length=255, verbose_name='Caption')),
                ('order', models.IntegerField(default=0, help_text='Order in which the image appears in the gallery', verbose_name='Display Order')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='vehicles.vehicle', verbose_name='Vehicle')),
            ],
            options={
                'verbose_name': 'Vehicle Image',
                'verbose_name_plural': 'Vehicle Images',
                'db_table': 'vehicle_image',
                'ordering': ['order'],
            },
        ),
    ]
