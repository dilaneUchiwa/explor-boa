# Generated by Django 5.2.2 on 2025-06-26 14:24

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('business', '0001_initial'),
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FoodCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time when this record was created', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time when this record was last updated', verbose_name='Updated At')),
                ('name', models.CharField(help_text='Category name (e.g. Appetizers, Main Course, Desserts)', max_length=100, unique=True, verbose_name='Name')),
                ('description', models.TextField(blank=True, help_text='Optional description of the category', verbose_name='Description')),
                ('image', models.ImageField(blank=True, help_text='Optional category image', upload_to='food_categories/', verbose_name='Image')),
                ('order', models.IntegerField(default=0, help_text='Order in which the category appears in listings', verbose_name='Display Order')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this category is active and should be displayed', verbose_name='Active')),
            ],
            options={
                'verbose_name': 'Food Category',
                'verbose_name_plural': 'Food Categories',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='MenuItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the menu item', max_length=200, verbose_name='Name')),
                ('slug', models.SlugField(help_text='URL-friendly version of the menu item name', max_length=255, verbose_name='Slug')),
                ('description', models.TextField(blank=True, help_text='Detailed description of the menu item', verbose_name='Description')),
                ('price', models.DecimalField(decimal_places=2, help_text='Price in XAF', max_digits=10, verbose_name='Price')),
                ('preparation_time_minutes', models.IntegerField(blank=True, help_text='Estimated preparation time in minutes', null=True, verbose_name='Preparation Time')),
                ('calories', models.IntegerField(blank=True, help_text='Caloric content', null=True, verbose_name='Calories')),
                ('ingredients', models.JSONField(blank=True, default=list, help_text='List of ingredients', verbose_name='Ingredients')),
                ('allergens', models.JSONField(blank=True, default=list, help_text='List of allergens', verbose_name='Allergens')),
                ('dietary_info', models.JSONField(blank=True, default=list, help_text='Dietary information (vegetarian, vegan, etc.)', verbose_name='Dietary Information')),
                ('main_image', models.ImageField(blank=True, help_text='Primary image of the menu item', upload_to='menu_items/', verbose_name='Main Image')),
                ('is_available', models.BooleanField(default=True, help_text='Whether this item is currently available', verbose_name='Available')),
                ('is_featured', models.BooleanField(default=False, help_text='Whether this item should be featured', verbose_name='Featured')),
                ('order', models.IntegerField(default=0, help_text='Order in which the item appears in listings', verbose_name='Display Order')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('business_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='menu_items', to='business.businesslocation', verbose_name='Business Location')),
                ('food_category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='menu_items', to='orders.foodcategory', verbose_name='Food Category')),
            ],
            options={
                'verbose_name': 'Menu Item',
                'verbose_name_plural': 'Menu Items',
                'db_table': 'menu_item',
                'ordering': ['food_category', 'order', 'name'],
                'unique_together': {('business_location', 'slug')},
            },
        ),
        migrations.CreateModel(
            name='MenuItemImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(help_text='Additional image of the menu item', upload_to='menu_items/', verbose_name='Image')),
                ('caption', models.CharField(blank=True, help_text='Optional caption for the image', max_length=255, verbose_name='Caption')),
                ('order', models.IntegerField(default=0, help_text='Order in which the image appears in the gallery', verbose_name='Display Order')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('menu_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='orders.menuitem', verbose_name='Menu Item')),
            ],
            options={
                'verbose_name': 'Menu Item Image',
                'verbose_name_plural': 'Menu Item Images',
                'db_table': 'menu_item_image',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='RestaurantOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(help_text='Unique order reference number', max_length=50, unique=True, verbose_name='Order Number')),
                ('order_type', models.CharField(choices=[('DINE_IN', 'Dine In'), ('TAKEAWAY', 'Takeaway'), ('DELIVERY', 'Delivery')], default='DINE_IN', max_length=20, verbose_name='Order Type')),
                ('table_number', models.CharField(blank=True, help_text='Table number for dine-in orders', max_length=20, null=True, verbose_name='Table Number')),
                ('subtotal', models.DecimalField(decimal_places=2, help_text='Order subtotal before tax and fees', max_digits=10, verbose_name='Subtotal')),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Tax Amount')),
                ('delivery_fee', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Delivery Fee')),
                ('total_amount', models.DecimalField(decimal_places=2, help_text='Final order amount including tax and fees', max_digits=10, verbose_name='Total Amount')),
                ('commission_amount', models.DecimalField(decimal_places=2, default=0.0, help_text='Platform commission on the order', max_digits=10, verbose_name='Commission Amount')),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('CONFIRMED', 'Confirmed'), ('PREPARING', 'Preparing'), ('READY', 'Ready'), ('DELIVERED', 'Delivered'), ('CANCELLED', 'Cancelled'), ('REFUNDED', 'Refunded')], default='PENDING', max_length=20, verbose_name='Status')),
                ('payment_status', models.CharField(choices=[('PENDING', 'Pending'), ('PAID', 'Paid'), ('REFUNDED', 'Refunded'), ('FAILED', 'Failed')], default='PENDING', max_length=20, verbose_name='Payment Status')),
                ('estimated_preparation_time', models.IntegerField(blank=True, help_text='Estimated preparation time in minutes', null=True, verbose_name='Estimated Preparation Time')),
                ('special_instructions', models.TextField(blank=True, help_text='Special instructions for the entire order', verbose_name='Special Instructions')),
                ('customer_notes', models.TextField(blank=True, verbose_name='Customer Notes')),
                ('restaurant_notes', models.TextField(blank=True, verbose_name='Restaurant Notes')),
                ('cancellation_reason', models.TextField(blank=True, verbose_name='Cancellation Reason')),
                ('cancelled_at', models.DateTimeField(blank=True, null=True, verbose_name='Cancelled At')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('business_location', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='restaurant_orders_from_location', to='business.businesslocation', verbose_name='Business Location')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='restaurant_orders', to=settings.AUTH_USER_MODEL, verbose_name='Customer')),
                ('delivery_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='restaurant_orders', to='core.physicaladdress', verbose_name='Delivery Address')),
            ],
            options={
                'verbose_name': 'Restaurant Order',
                'verbose_name_plural': 'Restaurant Orders',
                'db_table': 'restaurant_order',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(help_text='Number of items ordered', verbose_name='Quantity')),
                ('unit_price', models.DecimalField(decimal_places=2, help_text='Price per item at the time of order', max_digits=10, verbose_name='Unit Price')),
                ('total_price', models.DecimalField(decimal_places=2, help_text='Total price for this item (quantity × unit price)', max_digits=10, verbose_name='Total Price')),
                ('special_instructions', models.TextField(blank=True, help_text='Special instructions for this item', verbose_name='Special Instructions')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('menu_item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='order_items', to='orders.menuitem', verbose_name='Menu Item')),
                ('restaurant_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='orders.restaurantorder', verbose_name='Restaurant Order')),
            ],
            options={
                'verbose_name': 'Order Item',
                'verbose_name_plural': 'Order Items',
                'db_table': 'order_item',
                'ordering': ['created_at'],
            },
        ),
    ]
